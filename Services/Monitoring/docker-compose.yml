version: "3.7"

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: "1000:1000" # change to your user id($PUID) in the .env file in the Stack folder, as well as your group id($PGID)
    security_opt:
      - no-new-privileges:true=
    depends_on:
      - influxdb
      - varken
    networks:
      - t2_web
    ports:
      - target: 3000
        published: 3100
        protocol: tcp
        mode: host
    volumes:
      - $USERDIR/Services/Monitoring/grafana/:/config
    environment:
      - GF_PATHS_DATA=/config/data
      - GF_PATHS_LOGS=/config/logs
      - GF_PATHS_PLUGINS=/config/plugins
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.grafana-rtr.entrypoints=https"
      - "traefik.http.routers.grafana-rtr.rule=Host(`grafana.$DOMAINNAME`)"
      - "traefik.http.routers.grafana-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.grafana-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"
    restart: unless-stopped

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   hostname: prometheus
  #   user: "65534"
  #   security_opt:
  #     - no-new-privileges:true
  #   networks:
  #     - t2_web
  #   ports:
  #     - target: 9090
  #       published: 9190
  #       protocol: tcp
  #       mode: host
  #   volumes:
  #     - $USERDIR/Services/Monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.prometheus-rtr.entrypoints=https"
  #     - "traefik.http.routers.prometheus-rtr.rule=Host(`prometheus.$DOMAINNAME`)"
  #     - "traefik.http.routers.prometheus-rtr.tls=true"
  #     ## Middlewares
  #     - "traefik.http.routers.prometheus-rtr.middlewares=chain-authelia@file"
  #     ## HTTP Services
  #     - "traefik.http.routers.prometheus-rtr.service=prometheus-svc"
  #     - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"
  #   restart: unless-stopped

  influxdb:
    image: influxdb
    container_name: influxdb
    hostname: influxdb
    security_opt:
      - no-new-privileges:true
    networks:
      - t2_web
    ports:
      - target: 8086
        published: 8086
        protocol: tcp
        mode: host
      - target: 4242 # for opentsdb to be able to get metrics from netdata
        published: 4242
        protocol: tcp
        mode: host
    volumes:
      - $USERDIR/Services/Monitoring/influxdb/lib:/var/lib/influxdb
      - $USERDIR/Services/Monitoring/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    restart: unless-stopped

  varken:
    hostname: varken
    container_name: varken
    image: boerderij/varken
    # user: "1000"
    security_opt:
      - no-new-privileges:true
    depends_on:
      - influxdb
    networks:
      - t2_web
    volumes:
      - $USERDIR/Services/Monitoring/varken/:/config
    environment:
      - TZ=Indian/Mauritius
    restart: unless-stopped

  speedtest:
    image: atribe/speedtest-for-influxdb-and-grafana
    container_name: speedtest
    hostname: speedtest
    security_opt:
      - no-new-privileges:true
    depends_on:
      - influxdb
    networks:
      - t2_web
    volumes:
      - $USERDIR/Services/Monitoring/speedtest/config.ini:/src/config.ini
    restart: unless-stopped

  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    hostname: dozzle
    security_opt:
      - no-new-privileges:true
    networks:
      - web
      - proxy
    ports:
      - target: 8080
        published: 8280
        protocol: tcp
        mode: host
    environment:
      - DOCKER_HOST=tcp://dockerproxy:2375
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME`)"
      - "traefik.http.routers.dozzle-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"
    restart: unless-stopped

networks:
  t2_web:
    external: true
