version: "3.7"

networks:
  web:
    external:
      name: web
  proxy:
    external:
      name: proxy
  filerun:
    external:
      name: filerun
  filerun:
    external:
      name: nextcloud

services:
  dockerproxy:
    image: tecnativa/docker-socket-proxy
    hostname: dockerproxy
    container_name: dockerproxy
    networks:
      - proxy
    ports:
      - 127.0.0.1:2375:2375
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CONTAINERS=1
    restart: always

  traefik2:
    image: traefik:v2.4.8
    container_name: traefik2
    hostname: traefik2
    security_opt:
      - no-new-privileges:true
    depends_on:
      - dockerproxy
    networks:
      - proxy
      - web
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8280
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Stack/traefik2/traefik.toml:/etc/traefik/traefik.toml
      - ${USERDIR}/Services/Stack/traefik2/rules:/rules # file provider directory
      - ${USERDIR}/Services/Stack/traefik2/acme.json:/acme.json # cert location - you must `touch` this file and change permissions to 600
      - ${USERDIR}/Services/Stack/traefik2/logs:/logs
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    environment:
      - TZ=${TZ}
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=${DOMAINNAME}"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.${DOMAINNAME}"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file"
    healthcheck:
      test: wget -qO - http://localhost:8080/ping | grep 'OK' || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 30s
    restart: always

  error-pages:
    image: guillaumebriday/traefik-custom-error-pages
    container_name: error-pages
    hostname: error-pages
    networks:
      - web
    labels:
      - "traefik.enable=true"
       ## HTTP Routers
      - "traefik.http.routers.error-pages-rtr.entrypoints=https"
      - "traefik.http.routers.error-pages-rtr.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.error-pages-rtr.tls=true"
      - "traefik.http.routers.error-pages-rtr.priority=1"
      ## HTTP Services
      - "traefik.http.routers.error-pages-rtr.service=error-pages-svc"
      - "traefik.http.services.error-pages-svc.loadbalancer.server.port=80"
    restart: unless-stopped

  authelia:
    image: authelia/authelia:4.29.4
    container_name: authelia
    hostname: authelia
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    volumes:
      - ${USERDIR}/Services/Authelia/lib:/var/lib/authelia
      - ${USERDIR}/Services/Authelia/configuration.yml:/config/configuration.yml:ro
      - ${USERDIR}/Services/Authelia/users_database.yml:/etc/authelia/users_database.yml
      # - ${USERDIR}/Services/Authelia/notification.txt:/tmp/authelia/notification.txt
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=https"
      - "traefik.http.routers.authelia-rtr.rule=Host(`auth.${DOMAINNAME}`)"
      - "traefik.http.routers.authelia-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"
    healthcheck:
      test: wget -q -O - http://localhost:9091/api/state/ | grep '"status":"OK"' || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 30s
    restart: always

  vpn:
    image: dperson/openvpn-client
    container_name: vpn
    hostname: vpn
    command: -d
    security_opt:
      - no-new-privileges:true
      - label:disable
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    networks:
      - web
    ports:
      - target: 8100
        published: 8100
        protocol: tcp
        mode: host
      - target: 6881
        published: 6881
        protocol: tcp
        mode: host
      - target: 6881
        published: 6881
        protocol: udp
        mode: host
    volumes:
      - ${USERDIR}/Services/OpenVPN/vpn:/vpn
      - /dev/net:/dev/net:z
    environment:
      - TZ=${TZ}
    tmpfs:
      - /run
      - /tmp
    restart: always

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    security_opt:
      - no-new-privileges:true
    stdin_open: true
    tty: true
    depends_on:
      - vpn
    network_mode: "service:vpn"
    volumes:
      - ${USERDIR}/Services/qBitTorrent:/config
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/completed_downloads:/data/Downloads/completed_downloads
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/incomplete_downloads:/data/Downloads/incomplete_downloads
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/blackhole_torrent:/data/Downloads/blackhole_torrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      - WEBUI_PORT=8100
    labels:
      - "traefik.enable=true"
       ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=https"
      - "traefik.http.routers.qbittorrent-rtr.rule=Host(`qbit.${DOMAINNAME}`)"
      - "traefik.http.routers.qbittorrent-rtr.tls=true"
      ## Middlewares
      # it is not possible to disable authentication for the webUI of qbit, however, I disabled CSRF since it caused some white screen issues
      - "traefik.http.routers.qbittorrent-rtr.middlewares=middlewares-rate-limit@file"
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=8100"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8100/api/v2/app/version || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    hostname: radarr
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 7878
        published: 7878
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Radarr:/config
      - ${USERDIR}/Services/Shared:/shared
      - ${THEVAULTDIR}/PlexMediaServer/Downloads:/data/Downloads
      - ${THEVAULTDIR}/PlexMediaServer/Movies:/data/Movies
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.${DOMAINNAME}`) && (Headers(`X-Api-Key`, `${RADARR_API_KEY}`) || Query(`apikey=${RADARR_API_KEY}`))"
      - "traefik.http.routers.radarr-rtr-bypass.tls=true"
      - "traefik.http.routers.radarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.${DOMAINNAME}`)"
      - "traefik.http.routers.radarr-rtr.tls=true"
      - "traefik.http.routers.radarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:7878/api/v3/system/status?apikey=${RADARR_API_KEY} || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:develop
    container_name: sonarr
    hostname: sonarr
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8989
        published: 8989
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Sonarr:/config
      - ${USERDIR}/Services/Shared:/shared
      - ${THEVAULTDIR}/PlexMediaServer/Downloads:/data/Downloads
      - ${THEVAULTDIR}/PlexMediaServer/TvShows:/data/TvShows
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.${DOMAINNAME}`) && (Headers(`X-Api-Key`, `${SONARR_API_KEY}`) || Query(`apikey=${SONARR_API_KEY}`))"
      - "traefik.http.routers.sonarr-rtr-bypass.tls=true"
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.${DOMAINNAME}`)"
      - "traefik.http.routers.sonarr-rtr.tls=true"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
     healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8989/api/v3/system/status?apikey=${SONARR_API_KEY} || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr:nightly
    container_name: lidarr
    hostname: lidarr
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8686
        published: 8686
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Lidarr:/config
      - ${THEVAULTDIR}/PlexMediaServer/Downloads:/data/Downloads
      - ${THEVAULTDIR}/PlexMediaServer/Music:/data/Music
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.lidarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.${DOMAINNAME}`) && (Headers(`X-Api-Key`, `${LIDARR_API_KEY}`) || Query(`apikey=${LIDARR_API_KEY}`))"
      - "traefik.http.routers.lidarr-rtr-bypass.tls=true"
      - "traefik.http.routers.lidarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.lidarr-rtr.entrypoints=https"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.${DOMAINNAME}`)"
      - "traefik.http.routers.lidarr-rtr.tls=true"
      - "traefik.http.routers.lidarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8686/api/v1/system/status?apikey=${LIDARR_API_KEY} || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    hostname: bazarr
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 6767
        published: 6767
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Bazarr:/config
      - ${THEVAULTDIR}/PlexMediaServer/Movies:/data/Movies
      - ${THEVAULTDIR}/PlexMediaServer/TvShows:/data/TvShows
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.bazarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr-bypass.rule=Host(`bazarr.${DOMAINNAME}`) && Query(`apikey=${BAZARR_API_KEY}`)"
      - "traefik.http.routers.bazarr-rtr-bypass.tls=true"
      - "traefik.http.routers.bazarr-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.${DOMAINNAME}`)"
      - "traefik.http.routers.bazarr-rtr.tls=true"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.routers.bazarr-rtr-bypass.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:6767/api/system/status?apikey=${BAZARR_API_KEY} || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  readarr:
    image: hotio/readarr:nightly
    container_name: readarr
    hostname: readarr
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8787
        published: 8787
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Readarr:/config
      - ${THEVAULTDIR}/PlexMediaServer/Downloads:/data/Downloads
      - ${THEVAULTDIR}/PlexMediaServer/Readables:/data/Readables
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.readarr-rtr.entrypoints=https"
      - "traefik.http.routers.readarr-rtr.rule=Host(`readarr.${DOMAINNAME}`)"
      - "traefik.http.routers.readarr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.readarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.readarr-rtr.service=readarr-svc"
      - "traefik.http.services.readarr-svc.loadbalancer.server.port=8787"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:8787/api/v1/system/status?apikey=${READARR_API_KEY} || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    hostname: sabnzbd
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8080
        published: 8180
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Sabnzbd:/config
      - ${USERDIR}/Services/Shared:/shared
      - ${THEVAULTDIR}/PlexMediaServer/Downloads:/data/Downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sabnzbd-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sabnzbd-rtr-bypass.rule=Host(`sabnzbd.${DOMAINNAME}`) && (Query(`apikey=${SABNZBD_API_KEY}`) || Query(`apikey=${SABNZBD_NZB_KEY}`))"
      - "traefik.http.routers.sabnzbd-rtr-bypass.tls=true"
      - "traefik.http.routers.sabnzbd-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=https"
      - "traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.${DOMAINNAME}`)"
      - "traefik.http.routers.sabnzbd-rtr.tls=true"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.sabnzbd-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      - "traefik.http.routers.sabnzbd-rtr-bypass.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    hostname: jackett
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 9117
        published: 9117
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Jackett:/config
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/completed_downloads:/data/Downloads/completed_downloads
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/blackhole_torrent:/data/Downloads/blackhole_torrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.jackett-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.jackett-rtr-bypass.rule=Host(`jackett.${DOMAINNAME}`) && Query(`apikey=${JACKETT_API_KEY}`)"
      - "traefik.http.routers.jackett-rtr-bypass.tls=true"
      - "traefik.http.routers.jackett-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.jackett-rtr.entrypoints=https"
      - "traefik.http.routers.jackett-rtr.rule=Host(`jackett.${DOMAINNAME}`)"
      - "traefik.http.routers.jackett-rtr.tls=true"
      - "traefik.http.routers.jackett-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.jackett-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.jackett-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.jackett-rtr.service=jackett-svc"
      - "traefik.http.routers.jackett-rtr-bypass.service=jackett-svc"
      - "traefik.http.services.jackett-svc.loadbalancer.server.port=9117"
    restart: unless-stopped

  nzbhydra:
    image: linuxserver/nzbhydra2
    container_name: nzbhydra
    hostname: nzbhydra
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 5076
        published: 5076
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/NzbHydra:/config
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/blackhole_torrent:/data/Downloads/blackhole_torrent
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/blackhole_nzb:/data/Downloads/blackhole_nzb
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.nzbhydra-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.nzbhydra-rtr-bypass.rule=Host(`nzbhydra.${DOMAINNAME}`) && Query(`apikey=${NZBHYDRA_API_KEY}`)"
      - "traefik.http.routers.nzbhydra-rtr-bypass.tls=true"
      - "traefik.http.routers.nzbhydra-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.nzbhydra-rtr.entrypoints=https"
      - "traefik.http.routers.nzbhydra-rtr.rule=Host(`nzbhydra.${DOMAINNAME}`)"
      - "traefik.http.routers.nzbhydra-rtr.tls=true"
      - "traefik.http.routers.nzbhydra-rtr-bypass.priority=99"
      ## Middlewares
      - "traefik.http.routers.nzbhydra-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.nzbhydra-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.nzbhydra-rtr.service=nzbhydra-svc"
      - "traefik.http.routers.nzbhydra-rtr-bypass.service=nzbhydra-svc"
      - "traefik.http.services.nzbhydra-svc.loadbalancer.server.port=5076"
    restart: unless-stopped

  plex:
    image: linuxserver/plex
    container_name: plex
    hostname: plex
    security_opt:
      - no-new-privileges:true
    ## If not using host networking mode, enter your plex subdomain in the "Custom server access URLs" in Plex settings, then turn off remote access.
    ## You also don't need to port forward port 34200 that way, everything uses the plex subdomain
    # network_mode: host
    networks:
      - web
    ports:
      - target: 32400
        published: 32400
        protocol: tcp
        mode: host
    #   - target: 32410 # GSM network discovery
    #     published: 32410
    #     protocol: udp
    #     mode: host
    #   - target: 32412 # GSM network discovery
    #     published: 32412
    #     protocol: udp
    #     mode: host
    #   - target: 32413 # GSM network discovery
    #     published: 32413
    #     protocol: udp
    #     mode: host
    #   - target: 32414 # GSM network discovery
    #     published: 32414
    #     protocol: udp
    #     mode: host
    #   - target: 5353 # for older Bonjour/Avahi network discovery
    #     published: 5353
    #     protocol: udp
    #     mode: host
    #   - target: 1900 # DLNA
    #     published: 1900
    #     protocol: udp
    #     mode: host
    #   - target: 32469 # DLNA
    #     published: 32469
    #     protocol: tcp
    #     mode: host
    volumes:
      - ${USERDIR}/Services/Plex:/config
      - ${USERDIR}/Services/Shared:/shared
      - ${THEVAULTDIR}/PlexMediaServer:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.plex-rtr.entrypoints=https"
      - "traefik.http.routers.plex-rtr.rule=Host(`plex.${DOMAINNAME}`)"
      - "traefik.http.routers.plex-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.plex-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.plex-rtr.service=plex-svc"
      - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:32400/identity || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8181
        published: 8181
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Tautulli:/config
      - ${USERDIR}/Services/Plex/config/Library/Application Support/Plex Media Server/Logs:/Plex_logs
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.tautulli-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.tautulli-rtr-bypass.rule=Host(`tautulli.${DOMAINNAME}`) && Query(`apikey=${TAUTULLI_API_KEY}`)"
      - "traefik.http.routers.tautulli-rtr-bypass.tls=true"
      - "traefik.http.routers.tautulli-rtr-bypass.priority=100"
      ## HTTP Routers
      - "traefik.http.routers.tautulli-rtr.entrypoints=https"
      - "traefik.http.routers.tautulli-rtr.rule=Host(`tautulli.${DOMAINNAME}`)"
      - "traefik.http.routers.tautulli-rtr.tls=true"
      - "traefik.http.routers.tautulli-rtr-bypass.priority=99"
      ## Middlewares
      - "traefik.http.routers.tautulli-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.tautulli-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.tautulli-rtr.service=tautulli-svc"
      - "traefik.http.routers.tautulli-rtr-bypass.service=tautulli-svc"
      - "traefik.http.services.tautulli-svc.loadbalancer.server.port=8181"
    restart: unless-stopped

  # jellyfin:
  #   image: linuxserver/jellyfin
  #   container_name: jellyfin
  #   hostname: jellyfin
  #   networks:
  #     - web
  #   ports:
  #     - target: 8096
  #       published: 8096
  #       protocol: tcp
  #       mode: host
  #   volumes:
  #     - ${USERDIR}/Services/Jellyfin:/config
  #     - ${THEVAULTDIR}/PlexMediaServer:/data
  #   #   - /opt/vc/lib:/opt/vc/lib #optional
  #   devices:
  #     - /dev/dri:/dev/dri
  #   #   - /dev/vchiq:/dev/vchiq #optional
  #   #   - /dev/video10:/dev/video10 #optional
  #   #   - /dev/video11:/dev/video11 #optional
  #   #   - /dev/video12:/dev/video12 #optional
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK=${UMASK}
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.jellyfin-rtr.entrypoints=https"
  #     - "traefik.http.routers.jellyfin-rtr.rule=Host(`jellyfin.${DOMAINNAME}`)"
  #     - "traefik.http.routers.jellyfin-rtr.tls=true"
  #     ## Middlewares
  #     - "traefik.http.routers.jellyfin-rtr.middlewares=chain-no-auth@file"
  #     ## HTTP Services
  #     - "traefik.http.routers.jellyfin-rtr.service=jellyfin-svc"
  #     - "traefik.http.services.jellyfin-svc.loadbalancer.server.port=8096"
  #   restart: unless-stopped

  emby:
    image: linuxserver/emby
    container_name: emby
    hostname: emby
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 8096
        published: 8096
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Emby:/config
      - ${THEVAULTDIR}/PlexMediaServer:/data
      # - /path/for/transcoding:/transcode #optional
      # - /opt/vc/lib:/opt/vc/lib #optional
    devices:
      - /dev/dri:/dev/dri #for VAAPI HW acceleration - Emby Premiere Only
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.emby-rtr.entrypoints=https"
      - "traefik.http.routers.emby-rtr.rule=Host(`emby.${DOMAINNAME}`)"
      - "traefik.http.routers.emby-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.emby-rtr.middlewares=middlewares-rate-limit@file"
      ## HTTP Services
      - "traefik.http.routers.emby-rtr.service=emby-svc"
      - "traefik.http.services.emby-svc.loadbalancer.server.port=8096"
    healthcheck:
      test: curl -f http://localhost:8096/emby/system/info/public?format=json || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: always

  navidrome:
    image: deluan/navidrome
    container_name: navidrome
    hostname: navidrome
    user: ${PUID}:${PGID}
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 4533
        published: 4533
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Navidrome:/data
      - ${THEVAULTDIR}/PlexMediaServer/Music:/data/Music:ro
    environment:
      - ND_CONFIGFILE=/data/navidrome.toml
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.navidrome-rtr.entrypoints=https"
      - "traefik.http.routers.navidrome-rtr.rule=Host(`navidrome.${DOMAINNAME}`)"
      - "traefik.http.routers.navidrome-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.navidrome-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.navidrome-rtr.service=navidrome-svc"
      - "traefik.http.services.navidrome-svc.loadbalancer.server.port=4533"
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr:develop
    container_name: overseerr
    hostname: overseerr
    user: ${PUID}:${PGID}
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 5055
        published: 5055
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Overseer:/app/config
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.overseerr-rtr.entrypoints=https"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.${DOMAINNAME}`)"
      - "traefik.http.routers.overseerr-rtr.tls=true"
      # Middlewares
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"
    healthcheck:
      test: wget http://localhost:5055/api/v1/status -qO /dev/null || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    
  filerun-db:
    image: mariadb:10.1
    container_name: filerun-db
    hostname: filerun-db
    security_opt:
      - no-new-privileges:true
    networks:
      - filerun
    volumes:
      - ${USERDIR}/Services/Filerun/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: filerun
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: filerun_db
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    hostname: phpmyadmin
    security_opt:
      - no-new-privileges
    networks:
      - filerun
      # - nextcloud
    ports:
      - target: 80
        published: 480
        protocol: tcp
        mode: host
    environment:
      - PMA_ARBITRARY=1

  filerun:
    image: afian/filerun
    container_name: filerun
    hostname: filerun
    security_opt:
      - no-new-privileges:true
    depends_on:
      - filerun-db
    networks:
      - web
      - filerun
    ports:
      - target: 80
        published: 280
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Filerun/html:/var/www/html
      - ${THEVAULTDIR}:/user-files
    environment:
      FR_DB_HOST: filerun-db
      FR_DB_PORT: 3306
      FR_DB_NAME: filerun_db
      FR_DB_USER: filerun
      FR_DB_PASS: password
      APACHE_RUN_USER: ${USERNAME}
      APACHE_RUN_USER_ID: ${PUID}
      APACHE_RUN_GROUP: ${USERNAME}
      APACHE_RUN_GROUP_ID: ${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.filerun-rtr.entrypoints=https"
      - "traefik.http.routers.filerun-rtr.rule=Host(`filerun.${DOMAINNAME}`)"
      - "traefik.http.routers.filerun-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.filerun-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.filerun-rtr.service=filerun-svc"
      - "traefik.http.services.filerun-svc.loadbalancer.server.port=80"
    restart: unless-stopped

  # nextcloud-db:
  #   image: mariadb:10.5.8
  #   container_name: nextcloud-db
  #   hostname: nextcloud-db
  #   security_opt:
  #     - no-new-privileges:true
  #   networks:
  #     - nextcloud
  #   volumes:
  #     - ${USERDIR}/Services/Nextcloud/db:/var/lib/mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #     - MYSQL_USER=nextcloud
  #     - MYSQL_PASSWORD=password
  #     - MYSQL_DATABASE=nextcloud_db
  #   restart: unless-stopped

  # ## Right now, nextcloud is only accessible from the traefik proxy and not on the local network.
  # ## I still need to figure out how to make this work, but since I don't really use nextcloud and was only trying it out after I got fed up with it being glitchy and slow a few years ago, I wanted to try it out again
  # nextcloud:
  #   image: linuxserver/nextcloud
  #   container_name: nextcloud
  #   hostname: nextcloud
  #   security_opt:
  #     - no-new-privileges:true
  #   networks:
  #     - web
  #     - nextcloud
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK=${UMASK}
  #   volumes:
  #     - ${USERDIR}/Services/Nextcloud/config:/config
  #     - ${USERDIR}/Documents:/data/Documents
  #     - ${USERDIR}/Downloads:/data/Downloads
  #     - ${USERDIR}/Services:/data/Services
  #     - ${THEVAULTDIR}:/data/TheVault
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.nextcloud-rtr.entrypoints=https"
  #     - "traefik.http.routers.nextcloud-rtr.rule=Host(`nextcloud.${DOMAINNAME}`)"
  #     - "traefik.http.routers.nextcloud-rtr.tls=true"
  #     ## Middlewares
  #     - "traefik.http.routers.nextcloud-rtr.middlewares=chain-no-auth@file"
  #     ## HTTP Services
  #     - "traefik.http.routers.nextcloud-rtr.service=nextcloud-svc"
  #     - "traefik.http.services.nextcloud-svc.loadbalancer.server.port=80"
  #   restart: unless-stopped

  youtubedl-material:
    image: tzahi12345/youtubedl-material
    container_name: youtubedl-material
    hostname: youtubedl-material
    networks:
      - web
    ports:
      - target: 17442
        published: 8998
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/YoutubeDL-Material/appdata:/app/appdata
      - ${USERDIR}/Services/YoutubeDL-Material/audio:/app/audio
      - ${USERDIR}/Services/YoutubeDL-Material/video:/app/video
      - ${USERDIR}/Services/YoutubeDL-Material/subscriptions:/app/subscriptions
      - ${THEVAULTDIR}/PlexMediaServer/Downloads/youtubedl:/app/users
    environment:
      - WRITE_YTDL_CONFIG=true
      - ALLOW_CONFIG_MUTATIONS=true
      - YTDL_UMASK=${UMASK}
      - UID=${PUID}
      - GID=${PGID}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.youtubedl-rtr.entrypoints=https"
      - "traefik.http.routers.youtubedl-rtr.rule=Host(`youtubedl.${DOMAINNAME}`)"
      - "traefik.http.routers.youtubedl-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.youtubedl-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.youtubedl-rtr.service=youtubedl-svc"
      - "traefik.http.services.youtubedl-svc.loadbalancer.server.port=17442"
    restart: unless-stopped

  lychee:
    image: lycheeorg/lychee
    container_name: lychee
    hostname: lychee
    networks:
      - web
    ports:
      - target: 80
        published: 380
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Lychee/conf:/conf
      - ${USERDIR}/Services/Lychee/uploads:/uploads
      - ${USERDIR}/Services/Lychee/sym:/sym
      - ${USERDIR}/Services/Lychee/import:/data/import
      - ${THEVAULTDIR}/TheVault/Pictures:/data/Pictures
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - PHP_TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.lychee-rtr.entrypoints=https"
      - "traefik.http.routers.lychee-rtr.rule=Host(`lychee.${DOMAINNAME}`)"
      - "traefik.http.routers.lychee-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.lychee-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.lychee-rtr.service=lychee-svc"
      - "traefik.http.services.lychee-svc.loadbalancer.server.port=80"
    healthcheck:
      test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:80/ || exit 1
      interval: 1m30s
      timeout: 15s
      retries: 3
      start_period: 20s
    restart: always

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    hostname: heimdall
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - target: 80
        published: 180
        protocol: tcp
        mode: host
    volumes:
      - ${USERDIR}/Services/Heimdall:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=https"
      - "traefik.http.routers.heimdall-rtr.rule=Host(`dashboard.${DOMAINNAME}`)"
      - "traefik.http.routers.heimdall-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=80"
    restart: unless-stopped
